11-1
public class Geometric0bject {
	private String color="white";
	private boolean filled;
	private java.util.Date dateCreated;
	public Geometric0bject() {
		dateCreated=new java.util.Date();
	}
	public Geometric0bject(String color,boolean filled) {
		dateCreated=new java.util.Date();
		this.color=color;
		this.filled=filled;
	}
	public String getColor() {
		return color;
	}
	public void setColor(String color) {
		this.color=color;
	}
	public boolean isFilled() {
		return filled;
	}
	public void setFilled(boolean filled) {
		this.filled=filled;
	}
	public java.util.Date getDateCreated(){
		return dateCreated;
	}
	public String toString() {
		return "created on "+dateCreated+"\ncolor: "+color+" and filled: "+filled;
		}
}





11-2
public class Circle extends Geometric0bject{
	private double radius;
	
	public Circle() {
	}
	
	public Circle(double radius) {
		this.radius=radius;
	}
	
	public Circle(double radius,String color,boolean filled) {
		this.radius=radius;
		setColor(color);
		setFilled(filled);
	}
	
	public double getRadius() {
		return radius;
	}
	
	public void setRadius(double radius) {
		this.radius=radius;
	}
	
	public double getArea() {
		return radius*radius*Math.PI;
	}
	
	public double getDiameter() {
		return 2*radius;
	}
	
	public double getPerimeter() {
		return 2*radius*Math.PI;
	}
	
	public void printCircle() {
		System.out.println("The circle is created "+getDateCreated()+" and the radius is "+radius);
	}
}





11-3
public class Rectangle extends Geometric0bject {
	private double width;
	private double height;
	public Rectangle() {
	}
	public Rectangle(double width,double height) {
		this.width=width;
		this.height=height;
	}
	public Rectangle(double width,double height,String color,boolean filled) {
		this.width=width;
		this.height=height;
		setColor(color);
		setFilled(filled);
	}
	public double getWidth() {
		return width;
	}
	public double getHeight() {
		return height;
	}
	public void setWidth(double width) {
		this.width=width;
	}
	public void setHeight(double height) {
		this.height=height;
	}
	public double getArea() {
		return width*height;
	}
	public double getPerimeter() {
		return 2*(width+height);
	}
}





11-4
Geometric0bject 类
public class Geometric0bject {
	private String color="white";
	private boolean filled;
	private java.util.Date dateCreated;
	public Geometric0bject() {
		dateCreated=new java.util.Date();
	}
	public Geometric0bject(String color,boolean filled) {
		dateCreated=new java.util.Date();
		this.color=color;
		this.filled=filled;
	}
	public String getColor() {
		return color;
	}
	public void setColor(String color) {
		this.color=color;
	}
	public boolean isFilled() {
		return filled;
	}
	public void setFilled(boolean filled) {
		this.filled=filled;
	}
	public java.util.Date getDateCreated(){
		return dateCreated;
	}
	public String toString() {
		return "created on "+dateCreated+"\ncolor: "+color+" and filled: "+filled;
		}
}

Circle 类
public class Circle extends Geometric0bject{
	private double radius;
	public Circle() {
	}
	public Circle(double radius) {
		this.radius=radius;
	}
	public Circle(double radius,String color,boolean filled) {
		this.radius=radius;
		setColor(color);
		setFilled(filled);
	}
	public double getRadius() {
		return radius;
	}
	public void setRadius(double radius) {
		this.radius=radius;
	}
	public double getArea() {
		return radius*radius*Math.PI;
	}
	public double getDiameter() {
		return 2*radius;
	}
	public double getPerimeter() {
		return 2*radius*Math.PI;
	}
	public void printCircle() {
		System.out.println("The circle is created "+getDateCreated()+" and the radius is "+radius);
	}
}

Rectangle 类
public class Rectangle extends Geometric0bject {
	private double width;
	private double height;
	public Rectangle() {
	}
	public Rectangle(double width,double height) {
		this.width=width;
		this.height=height;
	}
	public Rectangle(double width,double height,String color,boolean filled) {
		this.width=width;
		this.height=height;
		setColor(color);
		setFilled(filled);
	}
	public double getWidth() {
		return width;
	}
	public double getHeight() {
		return height;
	}
	public void setWidth(double width) {
		this.width=width;
	}
	public void setHeight(double height) {
		this.height=height;
	}
	public double getArea() {
		return width*height;
	}
	public double getPerimeter() {
		return 2*(width+height);
	}
}

主函数
public class TestCircleRectangle {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Circle circle=new Circle(1);
		System.out.println("A circle "+circle.toString());
		System.out.println("The color is "+circle.getColor());
		System.out.println("The radius is "+circle.getRadius());
		System.out.println("The area is "+circle.getArea());
		System.out.println("The diameter is "+circle.getDiameter());
		Rectangle rectangle=new Rectangle(2,4);
		System.out.println("\nA rectangle "+rectangle.toString());
		System.out.println("The area is "+rectangle.getArea());
		System.out.println("The perimetre is "+rectangle.getPerimeter());
	}

}





11-5
public class PolymorphismDemo {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		display0bject(new Circle(1,"red",false));
		display0bject(new Rectangle(1,1,"black",true));
	}
	public static void display0bject(Geometric0bject object) {
		System.out.println("Created on "+object.getDateCreated()+". Color is "+object.getColor());
	}
}





11-6
public class DynamicBindingDemo {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		m(new GraduateStudent());
		m(new Student());
		m(new Person());
		m(new Object());
	}
	
	public static void m(Object x) {
		System.out.println(x.toString());
	}
}

class GraduateStudent extends Student{
}

class Student extends Person{
	@Override
	public String toString() {
		return "Student";
	}
}

class Person extends Object{
	@Override
	public String toString() {
		return "Person";
	}
}





11-7
package 第十一章;

public class CastingDemo {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Object object1=new Circle(1);
		Object object2=new Rectangle(1,1);
		
		display0bject(object1);
		display0bject(object2);
	}

public static void display0bject(Object object) {
	if(object instanceof Circle) {
		System.out.println("The circle arear is "+((Circle)object).getArea());
		System.out.println("The circle diameter is "+((Circle)object).getDiameter());
	}
	else if(object instanceof Rectangle) {
		System.out.println("The rectangle arae is "+((Rectangle)object).getArea());
	}
}
}

class Circle{
	private double radius;
	
	public Circle() {
	}
	
	public Circle(double radius) {
		this.radius=radius;
	}

	public double getRadius() {
		return radius;
	}
	
	public void setRadius(double radius) {
		this.radius=radius;
	}
	
	public double getArea() {
		return radius*radius*Math.PI;
	}
	
	public double getDiameter() {
		return 2*radius;
	}
}

class Rectangle{
	private double width;
	private double height;
	
	public Rectangle() {
	}
	
	public Rectangle(double width,double height) {
		this.width=width;
		this.height=height;
	}
	
	public double getWidth() {
		return width;
	}
	
	public double getHeight() {
		return height;
	}
	
	public void setWidth(double width) {
		this.width=width;
	}
	
	public void setHeight(double height) {
		this.height=height;
	}
	
	public double getArea() {
		return width*height;
	}
	
	public double getPerimeter() {
		return 2*(width+height);
	}
}





11-8
import java.util.ArrayList;
public class TestArrayList {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		ArrayList<String> cityList=new ArrayList<>();
		cityList.add("London");
		cityList.add("Denver");
		cityList.add("Paris");
		cityList.add("Miami");
		cityList.add("Seoul");
		cityList.add("Tokyo");
		System.out.println("List size? "+cityList.size());
		System.out.println("Is Miami in teh list? "+cityList.contains("Miami"));
		System.out.println("The location of Denver in the list? "+cityList.indexOf("Denver"));
		System.out.println("Is the list empty? "+cityList.isEmpty());
		cityList.add(2,"Xian");
		cityList.remove("Miami");
		cityList.remove(1);
		System.out.println(cityList.toString());
		for(int i=cityList.size()-1;i>=0;i--) {
			System.out.print(cityList.get(i)+" ");
		}
		System.out.println();
		ArrayList<Circle> list=new ArrayList<>();
		list.add(new Circle(2));
		list.add(new Circle(3));
		System.out.println("The area of the circle? "+list.get(0).getArea());
	}

}





11-9
import java.util.ArrayList;
import java.util.Scanner;
public class DistinctNumbers {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		ArrayList<Integer> list=new ArrayList<>();
		Scanner input=new Scanner(System.in);
		System.out.println("Enter integers (input ends with 0): ");
		int value;
		
		do { 
			value=input.nextInt();
			if(!list.contains(value)&&value!=0) {
				list.add(value);
			}
		}while(value!=0);
		
		System.out.print("The distinct numbers are: ");
		for(int i=0;i<list.size();i++) {
			System.out.print(list.get(i)+ " ");
		}
	}

}





11-10
import java.util.ArrayList;
public class MyStack {
	private ArrayList<Object> list=new ArrayList<>();
	
	public boolean isEmpty() {
		return list.isEmpty();
	}
	
	public int getSize() {
		return list.size();
	}
	
	public Object peek() {
		return list.get(getSize()-1);
	}
	
	public Object pop() {
		Object o=list.get(getSize()-1);
		list.remove(getSize()-1);
		return o;
	}
	
	public void push(Object o) {
		list.add(o);
	}
	
	@Override
	public String toString() {
		return "stack: "+list.toString();
	}
}


